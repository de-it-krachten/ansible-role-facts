---

dependency:
  name: galaxy
driver:
  name: hetznercloud
lint: |
  set -e
  yamllint .
  ln -fs molecule/default/requirements.yml
  ansible-lint
  rm -f requirements.yml
platforms:
{% for platform in MOLECULE_DISTROS %}
  - name: windows-storage-{{ platform.name }}-node1
    server_type: "{{ platform.server_type | default('cx11') }}"
    image: "{{ platform.image }}"
    location: "{{ platform.location | default('hel1') }}"
{% endfor %}
provisioner:
  name: ansible
{% if MOLECULE_ANSIBLE_ARGS is defined %}
  ansible_args:
{% for molecule_ansible_arg in MOLECULE_ANSIBLE_ARGS %}
    - {{ molecule_ansible_arg }}
{% endfor %}
{% endif %}
  env:
    ANSIBLE_PIPELINING: "True"
  lint:
    name: ansible-lint
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-converge.yml}
  inventory:
    group_vars: {}
    host_vars:
{% for platform in MOLECULE_DISTROS %}
      windows-storage-{{ platform.name }}-node1:
        ansible_become_method: runas
        ansible_become_user: vagrant
        ansible_connection: winrm
        ansible_host: 127.0.0.1
        ansible_password: vagrant
        ansible_port: 5985
        ansible_shell_type: powershell
        ansible_user: vagrant
        ansible_winrm_scheme: http
        ansible_winrm_server_cert_validation: ignore
        ansible_winrm_transport: basic

{% endfor %}
scenario:
  name: default
verifier:
  name: ansible
