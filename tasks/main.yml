---

- debug: var=ansible_disks_custom
- debug: var=windows_storage_disk_layout

# SCSILogicalUnit => SCSITargetId

#        {% if type == 'SATA' %}
#        {% set q1 = "[?BusType=='" + type + "' && SCSIPort==`" + adapter + "` && Port=='" + disk + "'].DeviceId" %}
#        {% elif type == 'SAS' %}
#        {% set q1 = "[?BusType=='" + type + "' && SCSIPort==`" + adapter + "` && SCSITargetId==`" + disk + "`].DeviceId" %}
#        {% endif %}

- name: Convert list of disks
  ansible.builtin.set_fact:
    __windows_storage_layout: >-
      [
        {% for item in windows_storage_disk_layout %}
        {% if item.disk_number is undefined and ansible_disks_custom is defined %}
        {% set type = item.type %}
        {% set adapter = (item.adapter | string) %}
        {% set disk = (item.disk | string) %}
        {% set adapter_field = windows_storage_fields[type]['adapter'] %}
        {% set disk_field = windows_storage_fields[type]['disk'] %}
        {% if type == 'SATA' %}
        {% set q1 = "[?BusType=='" + type + "' && " + adapter_field + "==`" + adapter + "` && " + disk_field + "==`" + disk + "`].DeviceId" %}
        {% elif type == 'SAS' %}
        {% set q1 = "[?BusType=='" + type + "' && " + adapter_field + "==`" + adapter + "` && " + disk_field + "==`" + disk + "`].DeviceId" %}
        {% endif %}
        {% set disk_number = (ansible_disks_custom.disks | json_query(q1) | first | int ) %}
        {% set item = ( item | combine({ "disk_number": disk_number })) %}
        {% endif %}
        {{ item }}{% if not loop.last %},{% endif %}
        {% endfor %}
      ]

- name: Partition each disk
  ansible.builtin.include_tasks:
    file: disk.yml
  vars:
    disk_number: "{{ disk.disk_number }}"
    partitions: "{{ disk.partitions }}"
  loop: "{{ __windows_storage_layout }}"
  loop_control:
    loop_var: disk
